env:
  maven_package_cache: ".m2/repository"

on: [push]

jobs:
  build:
    name: Build
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - run: mvn compile
      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/*

  test:
    name: test
    runs-on: [ self-hosted ]
    needs: [build]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - run: mvn test
      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/surefire-reports/*
                target/site/jacoco/*

  package:
    name: package
    runs-on: [ self-hosted ]
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - run: mvn package
      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/*.war

  deploy_test:
    name: deploy_test
    runs-on: [ self-hosted ]
    needs: [ package ]
    if: github.event_name == 'workflow_dispatch'
    steps:
      - run: docker rm --force tomcat
            docker image rm --force connect-four
            docker build -t connect-four .
            docker run -d --rm --name tomcat -p 8080:8080 connect-four

